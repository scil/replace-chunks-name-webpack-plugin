{"version":3,"file":"index.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACJA;IAII,wCAAY,OAAqB;QAHzB,kBAAa,GAAmB,EAAE,CAAC;QACnC,WAAM,GAAgB,IAAI,CAAC;QAG/B,IAAK,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;SACxD;QACD,IACI,CAAE,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAC,IAAI;YAC3B,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW;QAC1C,CAAC,CAAC,EACJ;YACE,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;SAClF;QACD,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IACjC,CAAC;IAGD,8CAAK,GAAL,UAAM,QAAQ;QAAd,iBAmBC;QAlBG,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAC,WAAW;YAC5D,WAAW,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAAG,CACrC,mBAAmB,EACnB;gBACI,IAAI,KAAI,CAAC,MAAM,EAAE;oBAEb,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,IAAI;wBAGxD,IAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;4BACK,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,EAAqB;oCAApB,OAAO,eAAC,WAAW;gCAC5C,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,CAAE,CAAC,OAAO,CAAC,OAAO,EAAC,WAAW,CAAC;4BACpE,CAAC,CAAC;oBACN,CAAC,CAAC,CAAC;iBACN;YACL,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IACL,qCAAC;AAAD,CAAC;AAED,iEAAe,8BAA8B,EAAC","sources":["webpack://replace-chunks-name-webpack-plugin/webpack/bootstrap","webpack://replace-chunks-name-webpack-plugin/webpack/runtime/define property getters","webpack://replace-chunks-name-webpack-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://replace-chunks-name-webpack-plugin/webpack/runtime/make namespace object","webpack://replace-chunks-name-webpack-plugin/./src/replace-chunks-name-webpack-plugin.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {OptionsProps, replaceProps, enableProps} from '../types';\n\nclass WebpackReplaceChunksNamePlugin {\n    private replaceConfig: replaceProps[] = [];\n    private enable: enableProps = true;\n\n    constructor(options: OptionsProps) {\n        if ( !Array.isArray(options.replaces)) {\n            throw new Error('options.replaces must be an array');\n        }\n        if (\n            ! options.replaces.every((item) => {\n               return item.pattern && item.replacement\n            })\n        ) {\n            throw new Error('members must contain {pattern: string, replacement: string}');\n        }\n        this.replaceConfig = options.replaces;\n        this.enable = options.enable;\n    }\n\n\n    apply(compiler) {\n        compiler.hooks.compilation.tap('replaceChunksName', (compilation) => {\n            compilation.hooks.afterOptimizeChunks.tap(\n                'replaceChunksName',\n                () => {\n                    if (this.enable) {\n                        // console.log('try to replace chunk file name');\n                        compilation.chunks.forEach((item) => {\n                            // console.log(item.id,item.name);\n\nif(item.name || item.id)\n                            this.replaceConfig.forEach(({pattern,replacement} )=> {\n                                item.name = (item.name || item.id ).replace(pattern,replacement)\n                            })\n                        });\n                    }\n                },\n            );\n        });\n    }\n}\n\nexport default WebpackReplaceChunksNamePlugin;\n"],"names":[],"sourceRoot":""}